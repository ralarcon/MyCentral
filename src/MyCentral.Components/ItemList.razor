@using System.Collections.Immutable;

@inherits BlazorObserver<Event>

@{
    var list = _list;
}

<div>
    @if (list.IsEmpty)
    {
        <p>No content</p>
    }
    else
    {
        <ul>
            @foreach (var item in list)
            {
                <li>
                    @item.EnqueuedTime
                    <ul>
                        <li>
                            System Properties
                            <ul>
                                @foreach (var property in item.SystemProperties)
                                {
                                    <li>@property.Key: @property.Value</li>
                                }
                            </ul>
                        </li>
                    </ul>
                    <ul>
                        <li>
                            Properties
                            <ul>
                                @foreach (var property in item.Properties)
                                {
                                    <li>@property.Key: @property.Value</li>
                                }
                            </ul>
                        </li>
                    </ul>
                </li>
            }
        </ul>
    }
</div>

@code {
    private ImmutableList<Event> _list = ImmutableList<Event>.Empty;

    public override void OnNext(Event value)
    {
        System.Threading.Interlocked.Exchange(ref _list, _list.Add(value));
        StateHasChanged();
    }
}
