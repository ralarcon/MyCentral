@inject IServiceClient Client
@implements IDisposable

@if (IsEmpty)
{
    <div class="card-body">
        <div class="alert alert-info" role="alert">
            No events available
        </div>
    </div>
}
else
{
    <table class="table">
        <tr>
            <th scope="col">Time</th>
            <th scope="col">Body</th>
        </tr>

        @foreach (var item in _events)
        {
            <tr>
                <td>@item.EnqueuedTime</td>
                <td>@item.Body</td>
            </tr>
        }

    </table>

    <div class="card-body">
        <a href="javascript:void(0);" class="card-link" @onclick="() => _events?.Clear()">Clear</a>
    </div>
}

@code {
    [Parameter]
    public string DeviceId { get; set; } = null!;

    public bool IsEmpty => _events is null || _events.Count == 0;

    private ObservableList<Event>? _events;

    protected override void OnInitialized()
    {
        _events = new ObservableList<Event>(Client.ObserveEventsFor(DeviceId), StateHasChanged);
    }

    public void Dispose()
    {
        _events?.Dispose();
    }
}
